# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Create and publish a all notebooks as Docker images to ghcr.io

on:
  push:
    branches: ["main"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME_BASE: ${{ github.repository }}

jobs:
  identifynotebooks:
    runs-on: ubuntu-latest
    outputs:
      notebookdirs: ${{ steps.set-notebooks.outputs.notebookdirs }}
    steps:
      - uses: actions/checkout@v2
      - id: set-notebooks
        uses: actions/github-script@v5
        with:
          script: |
            const { getNotebookDirs, shouldBuild } = require(".github/workflows/utils.js")
            const notebookDirs = getNotebookDirs()
            const notebookDirsForBuilding = await notebookDirs.filter(
              async nbDir => {
                return await shouldBuild(nbDir, { github })
              }
            )
            const output = JSON.stringify(notebookDirsForBuilding)
            console.log(`'${output}'\n`)
            console.log(`::set-output name=notebookdirs::${output}`)
  
  build:
    runs-on: ubuntu-latest
    needs: [identifynotebooks]
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        notebookdir: ${{fromJson(needs.identifynotebooks.outputs.notebookdirs)}}
      fail-fast: false
      max-parallel: 10
    steps:
      - run: echo "Building notebook ${{matrix.notebook}}"
      - uses: actions/checkout@v2
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - id: gettags
        uses: actions/github-script@v5
        env:
          NOTEBOOK_DIR: ${{ matrix.notebookdir }}
        with:
          script: |
            const { getPackageName } = require(".github/workflows/utils.js")
            const packageName = getPackageName(process.env.NOTEBOOK_DIR)
            const baseTag = `${process.env.REGISTRY}/${packageName}`
            console.log('Package name:', baseTag)
            const tags = [
              `${baseTag}:latest`
            ]
            console.log('Tags:', tags)
            console.log(`::set-output name=tags::${tags.join(".")}`)
      - name: Build and push Docker image
        uses: docker/build-push-action@v2.8.0
        with:
          context: "./${{ matrix.notebookdir }}"
          push: true
          tags: "${{ steps.gettags.outputs.tags }}"

  # build-and-push-image:
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: read
  #     packages: write

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2

  #     - name: Log in to the Container registry
  #       uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
  #       with:
  #         registry: ${{ env.REGISTRY }}
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}

  #     - name: ""

  #     - name: Extract metadata (tags, labels) for Docker
  #       id: meta
  #       uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
  #       with:
  #         images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
  #         tags: |
  #           type=ref,event=branch
  #           type=ref,event=pr
  #           type=semver,pattern={{version}}
  #           type=semver,pattern={{major}}.{{minor}}

  #     - name: Build and push Docker image
  #       uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
  #       with:
  #         context: .
  #         push: true
  #         tags: ${{ steps.meta.outputs.tags }}
  #         labels: ${{ steps.meta.outputs.labels }}
