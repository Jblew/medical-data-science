name: Create and publish a all notebooks as Docker images to ghcr.io

on:
  push:
    branches: ["main"]
    paths:
      - 'notebooks/**'
      - '.github/workflows/publish-notebooks-to-ghcr.yml'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME_BASE: ${{ github.repository }}

jobs:
  identifynotebooks:
    runs-on: ubuntu-latest
    outputs:
      notebookdirs: ${{ steps.set-notebooks.outputs.notebookdirs }}
      hasnotebookstobuild: ${{ steps.set-notebooks.outputs.hasnotebookstobuild }}
    steps:
      - uses: actions/checkout@v2
      - id: set-notebooks
        uses: actions/github-script@v5
        with:
          script: |
            const { getNotebookDirsThatShouldBeBuilt } = require("./ci.js")
            const notebookDirsForBuilding = await getNotebookDirsThatShouldBeBuilt({ github, context })
            const output = JSON.stringify(notebookDirsForBuilding)
            const hasnotebookstobuild = notebookDirsForBuilding.length > 0
            console.log(`'${output}'\n`)
            console.log(`::set-output name=notebookdirs::${output}`)
            console.log(`::set-output name=hasnotebookstobuild::${hasnotebookstobuild}`)
  
  build:
    runs-on: ubuntu-latest
    needs: [identifynotebooks]
    permissions:
      contents: read
      packages: write
    if: ${{ needs.identifynotebooks.outputs.hasnotebookstobuild == 'true' }}
    strategy:
      matrix:
        notebookdir: ${{fromJson(needs.identifynotebooks.outputs.notebookdirs)}}
      fail-fast: false
      max-parallel: 10
    steps:
      - run: echo "Building notebook ${{matrix.notebook}}"
      - uses: actions/checkout@v2
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - id: gettags
        uses: actions/github-script@v5
        env:
          NOTEBOOK_DIR: ${{ matrix.notebookdir }}
        with:
          script: |
            const { getPackageName, getVersion } = require("./ci.js")
            const notebookDir = process.env.NOTEBOOK_DIR
            const packageName = getPackageName(notebookDir, { context })
            const baseTag = `${process.env.REGISTRY}/${packageName}`
            console.log('Package name:', baseTag)
            const version = getVersion(notebookDir)
            const tags = [
              `${baseTag}:${version}`,
              `${baseTag}:latest`
            ]
            console.log('Tags:', tags)
            console.log(`::set-output name=tags::${tags.join(",")}`)
      - name: Build and push Docker image
        uses: docker/build-push-action@v2.8.0
        with:
          context: "${{ matrix.notebookdir }}"
          push: true
          tags: "${{ steps.gettags.outputs.tags }}"
